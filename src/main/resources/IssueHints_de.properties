ambiguous_custom_block_signature=Scratch lässt es zu, dass du mehrere eigene Blöcke mit demselben Namen erstellst. Das Programm kann anschließend nicht mehr zwischen den einzelnen Blöcken unterscheiden. Verwende für eigene Blöcke immer eindeutige Namen.
ambiguous_parameter_name_unused=Scratch lässt es zu, dass du die Eingabefelder von eigenen Blöcken gleich benennst. Das Programm kann anschließend nicht mehr zwischen den einzelnen Parametern unterscheiden. Verwende für Eingabefelder immer eindeutige Namen.
ambiguous_parameter_name_used=Scratch lässt es zu, dass du die Eingabefelder von eigenen Blöcken gleich benennst. Verwende für Eingabefelder unbedingt eindeutige Namen.
blocking_if_else=Du verwendest einen 'stoppe alles' oder 'stoppe dieses Skript' Baustein sowohl im 'falls' als auch im 'sonst' Zweig dieses Bausteins. Das Skript terminiert also in jedem Fall und die Blöcke nach dem 'fall sonst' Baustein werden nie ausgeführt. Verwende nur in einem Zweig einen 'Stoppe' Baustein oder lösche die Bausteine nach dem 'falls sonst' Baustein.
blocking_if_else_inside_loop=Du verwendest einen 'stoppe alles' oder 'stoppe dieses Skript' Baustein sowohl im 'falls' als auch im 'sonst' Zweig dieses Bausteins. Das Skript terminiert also in jedem Fall und die Wiederholung außerhalb des 'fall sonst' Bausteins wird nie richtig ausgeführt. Verwende nur in einem Zweig einen 'Stoppe' Baustein oder entferne die Wiederholung.
busy_waiting_script=In deinem Skript wird immer wieder die Bedingung überprüft, nur um bei positiver Auswertung das Skript zu beenden. Verwende statt Wiederholung und bedingter Anweisung einfach den 'Warte bis' Baustein, um auf den Eintritt der Bedingung zu warten.
busy_waiting_all=In deinem Skript wird immer wieder die Bedingung überprüft, nur um bei positiver Auswertung alles zu beenden. Verwende statt Wiederholung und bedingter Anweisung einfach den 'Warte bis' Baustein, um auf den Eintritt der Bedingung zu warten.
busy_waiting_clone=In deinem Skript wird immer wieder die Bedingung überprüft, nur um bei positiver Auswertung den Klon zu löschen. Verwende statt Wiederholung und bedingter Anweisung einfach den 'Warte bis' Baustein, um auf den Eintritt der Bedingung zu warten.
call_without_definition=Wenn ein eigener Block in Scratch gelöscht wird, bleiben manchmal Einsatzfragmente zurück. Stelle sicher, dass du den eigenen Block an allen Positionen, an denen du ihn verwendest, ebenfalls löschst.
clone_type_1=Die identischen Anweisungen existieren in mehreren Scripts. Ein eigener Block könnte den Code vereinfachen.
clone_type_2=Die gleichen Anweisungen, nur mit unterschiedlichen Parametern, existieren in mehreren Scripts. Ein eigener Block könnte den Code vereinfachen.
clone_type_3=Ähnlicher Code existiert in mehreren Scripts. Ein eigener Block könnte den Code vereinfachen.
comparing_literals_default_true=Du vergleichst zwei Texte. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: WAHR. Der Code in der '%THENELSE' Klammer wird %ALWAYSNEVER ausgeführt. Der Block ist überflüssig.
comparing_literals_default_false=Du vergleichst zwei Texte. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: FALSCH. Der Code in der '%THENELSE' Klammer wird %ALWAYSNEVER ausgeführt. Ersetze deinen Vergleich durch etwas Passenderes oder entferne die Kontrollstruktur.
comparing_literals_default_without_information=Du vergleichst zwei Texte. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE. Ersetze deinen Vergleich durch etwas Passenderes oder entferne die Kontrollstruktur.
comparing_literals_wait_true=Du vergleichst zwei Texte. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: WAHR. Der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgeführt. Der Baustein ist überflüssig.
comparing_literals_wait_false=Du vergleichst zwei Texte. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: FALSCH. Der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgeführt. Ersetze deinen Vergleich durch etwas Passenderes oder entferne die Kontrollstruktur.
comparing_literals_default_variable_without_information=Du hast '%VARIABLE' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Wolltest du eine Variable '%VARIABLE' im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende den neuen Baustein.
comparing_literals_default_variable_exists_without_information=Du hast '%VARIABLE' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Wolltest du den Baustein für deine angelegte Variable '%VARIABLE' im Vergleich verwenden?
comparing_literals_default_variable=Du hast '%VARIABLE' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Deshalb wird der Code in der '%THENELSE' Klammer %ALWAYSNEVER ausgeführt. Wolltest du eine Variable '%VARIABLE' im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende den neuen Baustein.
comparing_literals_default_variable_exists=Du hast '%VARIABLE' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Deshalb wird der Code in der '%THENELSE' Klammer %ALWAYSNEVER ausgeführt. Wolltest du den Baustein für deine angelegte Variable '%VARIABLE' im Vergleich verwenden?
comparing_literals_default_variable_two=Du hast '%VARIABLE1' und '%VARIABLE2' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Deshalb wird der Code in der '%THENELSE' Klammer %ALWAYSNEVER ausgeführt. Wolltest du die Variablen '%VARIABLE1' oder '%VARIABLE2' im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende die neuen Bausteine.
comparing_literals_default_variable_exists_two=Du hast '%VARIABLE1' und '%VARIABLE2' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Deshalb wird der Code in der '%THENELSE' Klammer %ALWAYSNEVER ausgeführt. Wolltest du die angelegte Variable '%VARIABLE1' oder '%VARIABLE2' im Vergleich verwenden?
comparing_literals_default_variable_two_without_information=Du hast '%VARIABLE1' und '%VARIABLE2' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Wolltest du die Variablen '%VARIABLE1' oder '%VARIABLE2' im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende die neuen Bausteine.
comparing_literals_default_variable_exists_two_without_information=Du hast '%VARIABLE1' und '%VARIABLE2' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Wolltest du die angelegte Variable '%VARIABLE1' oder '%VARIABLE2' im Vergleich verwenden?
comparing_literals_wait_variable=Du hast '%VARIABLE' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgeführt. Wolltest du eine Variable '%VARIABLE' im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende den neuen Baustein.
comparing_literals_wait_variable_exists=Du hast '%VARIABLE' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgeführt. Wolltest du den Baustein für deine angelegte Variable '%VARIABLE' im Vergleich verwenden?
comparing_literals_wait_variable_two=Du hast '%VARIABLE1' und '%VARIABLE2' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Deshalb wird der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgeführt. Wolltest du die Variablen '%VARIABLE1' oder '%VARIABLE2' im Vergleich verwenden? Dann lege diese in der Kategorie Variable an und verwende die neuen Bausteine.
comparing_literals_wait_variable_exists_two=Du hast '%VARIABLE1' und '%VARIABLE2' bloß als Text verwendet. Bei deinem Vergleich erhältst du immer dasselbe Ergebnis: %TRUEFALSE, weil die markierten Wörter in einem Lexikon in dieser Reihenfolge angeordnet würden. Deshalb wird der Code nach dem Warte Baustein wird %ALWAYSNEVER ausgeführt. Wolltest du die angelegte Variable '%VARIABLE1' oder '%VARIABLE2' im Vergleich verwenden?
custom_block_with_forever=Wenn du in einem eigenen Block einer Endloswiederholung verwendest, wird dieser Block nie wieder verlassen. Die Befehle, die nach deinem Blockaufruf im Programm stehen, können nie ausgeführt werden.
custom_block_with_termination=Wenn du in einem eigenen Block alles stoppst oder den aktuellen Klon löschst, werden die Befehle, die nach deinem Blockaufruf im Programm stehen, nie ausgeführt.
dead_code=In deinem Programm befinden sich Blöcke, die keinen Ereignisverarbeiter haben. Sie werden niemals ausgeführt. Dadurch wird dein Programm unübersichtlicher. Du kannst die Blöcke löschen oder versuchen sie in dein Programm zu integrieren.
duplicate_sprite=In deinem Programm befinden sich exakte Kopien der selben Figur. Das macht das Programm unübersichtlich. Hier könnte man auch einfach Klone erzeugen.
double_if=Dein Programm enthält zwei aufeinanderfolgende bedingte Anweisungen mit derselben Bedingung. Überlege, ob du diese zu einem Block zusammenfassen kannst, um das Programm kürzer und verständlicher zu machen.
duplicated_script=In deinem Programm befindet sich das gleiche Skript unnötigerweise doppelt. Das macht das Programm unübersichtlich. Du kannst eines der Skripte löschen.
empty_control_body=Du hast einen Steuerungsblock verwendet, der keine Bausteine enthält. Dies macht den Code schwieriger zu verstehen. Lösche den Basutein, falls er nicht weiter verwendet wird.
empty_custom_block=Du hast einen eigenen Block definiert, der keine Bausteine in seiner Defintion enthält. Wenn er aufgerufen wird, passiert nichts. Lösche den eigenen Block, falls er nicht weiter verwendet wird.
empty_project=Das gesamte Projekt ist leer. Fang am besten damit an, eine erste Figur hinzuzufügen.
empty_script=In deiner Figur befindet sich ein Ereignisverarbeiter der keine Bausteine angehängt hat. Wenn das Ereignis ausgelöst wird, geschieht nichts. Wenn nichts geschehen soll, kannst du diesen Baustein löschen. Wenn doch etwas passieren soll, baue dieses Skript entsprechend weiter.
empty_sprite=Die Figur %SPRITE besitzt keinerlei Skripte. Sie kann auf keine Benutzerinteraktion oder Interaktion mit anderen Figuren reagieren. Wenn das beabsichtigt ist, kannst du das einfach lassen. Wenn nicht solltest du überlegen, was die Figur machen soll und dafür Skripte in dieser Figur anlegen.
endless_recursion_broadcast=Führe beim Selbstaufruf eine Bedingung zum Abbruch ein, denn sonst ruft sich das Skript über die Nachricht unendlich lange immer wieder selbst auf.
endless_recursion_procedure=Führe beim Selbstaufruf eine Bedingung zum Abbruch ein, denn sonst ruft sich der eigene Block unendlich lange immer wieder selbst auf.
expression_as_touching_or_color=Der Baustein erwartet als Übergabewert eine Farbe. Du solltest den eingesetzten Baustein entfernen.
forever_inside_loop=Die innere Endloswiederholung wird nie verlassen. Alle Blöcke, die in diesem Skript, aber außerhalb der Endloswiederholung sind, werden so nie wieder ausgeführt. Versuche die innere Endloswiederholung wegzulassen.
illegal_parameter_refactor=Der verwendete Parameter besitzt den falschen Typ. Durch das Bearbeiten des eigenen Blocks ist aus dem Parameter mit einem Wahrheitswert ein Parameter mit einem Text oder Nummer geworden. Mache die Bearbeitung rückgängig.
immediate_delete_clone_after_broadcast=Das Skript löscht den Klon sofort nach dem 'sende Nachricht an alle' Baustein. Das Skript, das durch die Nachricht ausgelöst wird, wird nicht mehr richtig für diesen Klon abgearbeitet. Du verwendest besser einen 'sende Nachricht an alle und warte' Baustein.
immediate_stop_after_say_think=Das Skript stoppt alles sofort nach dem '%SAYTHINK' Baustein. Der Text wird nie angezeigt. Ersetze den '%SAYTHINK' Baustein durch einen '%SAYTHINK für Sekunden' Baustein.
inappropriate_handler_delete_clone=Das Skript enthält einen 'Lösche diesen Klon' Baustein. Dieser kann aber nicht ausgeführt werden, weil im Ereignisverarbeiter nicht klar wird, für welche Klone er gelten soll. Deswegen muss das Skript entweder mit dem 'Wenn ich als Klon entstehe' Baustein oder dem 'Wenn diese Figur angeklickt wird' Baustein beginnen oder du verschiebst den 'Lösche diesen Klon' Baustein in ein anderes Skript, das mit diesen Ereignisverarbeitern beginnt.
interrupted_loop_sensing=Der '%BLOCKNAME' Baustein verhindert während seiner Ausführung die Überrüfung der Bedingung im '%IFTHEN' Baustein. Es kann also sein, dass die Bedingung eintritt, aber dein Skript nicht passend reagiert, da es zu diesem Zeitpunkt mit dem '%BLOCKNAME' Baustein beschäftigt ist. Überlege, ob du die Prüfung parallel (in einem eigenen Skript) durchführen kannst.
long_script=Dein Skript ist sehr lang. Versuche, es in mehrere kürzere Skripte zu teilen: Teile dein langes Skript so auf, dass jedes kürzere Skript für eine Teilaufgabe deines Programms zuständig ist. Dadurch behältst du den Überblick.
loop_one=Deine Wiederholung wird nur ein einziges Mal durchlaufen. In diesem Fall ist der Wiederholungsbaustein überflüssig, du kannst ihn entfernen und die Bausteine im Inneren direkt in dein Skript einfügen.
loop_zero=Deine Wiederholung wird nie durchlaufen. In diesem Fall ist der Wiederholungsbaustein überflüssig, du kannst ihn und die Bausteine im Inneren entfernen.
message_never_received=Die Nachricht '%MESSAGE', die hier gesendet wird, wird nie durch einen 'Wenn ich empfange' Baustein empfangen. Deshalb passiert nichts in Reaktion auf diese Nachricht. Wenn du eine Nachricht sendest, stelle sicher, dass sie auch von einem Skript empfangen wird.
message_never_sent=Die Nachricht '%MESSAGE', die hier empfangen werden soll, wird nie gesendet. Dieses Skript wird also nie ausgelöst. Wenn du eine Nachricht empfangen willst, stelle sicher, dass diese auch (von einem anderen Skript) vorher versandt wird.
message_never_sent_say_think=Die Nachricht '%MESSAGE', die hier empfangen werden soll, wird nie gesendet. Dieses Skript wird also nie ausgelöst. Du verwendest die Nachricht aber als Text in einem '%SAYTHINK (für Sekunden)' Baustein in den Figuren: %SPRITES. Überlege, ob du dort zusätzlich einen 'sende %MESSAGE an alle' Baustein verwenden willst, um alle zu informieren.
message_never_sent_touching=Die Nachricht '%MESSAGE', die hier empfangen werden soll, wird nie gesendet. Dieses Skript wird also nie ausgelöst. Du verwendest einen 'wird %SPRITE berührt?' Baustein in den Figuren: %SPRITES. Wenn du eine Nachricht über diese Berührung an alle versenden willst, dann musst du dazu zusätzlich einen 'sende %MESSAGE an alle' Baustein verwenden.
middle_man_broadcast=Wenn man auf eine Nachricht wartet, nur um dann gleich eine andere loszuschicken, ist das ein Code Smell. Der Grund dafür ist, dass das Skript, das auf die erste Nachricht wartet, eigentlich unnötig ist, es ist nur Vermittler zwischen dem originalen Sender und dem finalen Empfänger. Überlege, ob du die Nachricht, auf die das finale Skript wartet, nicht auf die erste gesendete Nachricht umstellen kannst - dann kannst du problemlos das Skript in der Mitte löschen, um unnötigen Code zu vermeiden.
middle_man_procedure=Wenn man einen eigenen Block aufruft, nur um dann gleich einen anderen eigenen Block aufzurufen, ist das ein Code Smell. Der Grund dafür ist, dass das der eigenen Block, der nur einen anderen aufruft, eigentlich unnötig ist, er ist nur Vermittler zwischen dem originalen Aufruf und dem finalen eigenen Block. Überlege, ob du den ersten Aufruf nicht auf den zweiten eigenen Block umstellen kannst - dann kannst du problemlos den eigenen Block in der Mitte löschen, um unnötigen Code zu vermeiden.
missing_ask=Der 'Antwort' Baustein wird verwendet, aber es wird nie eine Frage gestellt.
missing_backdrop_switch=Wenn du auf einen Wechsel des Bühnenbilds reagieren willst, dieses Bühnenbild aber nie erscheint, wird das Skript nie ausgeführt. Stelle sicher, dass du den Wechsel zum Bühnenbild auch anordnen.
missing_clone_call=Wenn du das Element 'Wenn ich als Klon entstehe' verwendest, aber die Figur nicht geklont wird, wird das Skript nie ausgeführt. Stelle sicher, dass die Figur auch irgendwo geklont wird.
missing_clone_initialization=Wenn du eine Figur klonst, sie aber kein Skript mit 'Wenn ich als Klon entstehe' oder 'Wenn diese Figur angeklickt wird' enthät, kann der Klon nichts machen. Verwende ein Skript, das mit einem dieser Bausteine beginnt. Du kannst auch den 'hinterlasse Abruck' Baustein der Malstifterweiterung benutzen, wenn der Klon nichts machen soll.
missing_clone_initialization_delete_clone=Wenn du eine Figur klonst, sie aber kein Skript mit 'Wenn ich als Klon entstehe' oder 'Wenn diese Figur angeklickt wird' enthält, kann der Klon nichts machen. Du verwendest einen 'lösche diesen Klon' Baustein in einem Skript von %SPRITE. Untersuche, ob du dieses Skript sinnvoller mit dem 'Wenn ich als Klon entstehe' oder den 'Wenn diese Figur angeklickt wird' Baustein beginnst.
missing_clone_initialization_delete_clone_message=Wenn du eine Figur klonst, diese Figur aber kein Skript mit 'Wenn ich als Klon entstehe' oder 'Wenn diese Figur angeklickt wird' enthält, kann der Klon nichts machen. Du verwendest einen 'lösche diesen Klon' Baustein in einem Skript der Figur %SPRITE, das mit dem Empfangen der Nachricht '%MESSAGE' beginnt. Suche in der Figur %SPRITE nach dem Skript, in dem die Nachricht '%MESSAGE' versendet wurde. Verwende in diesem Skript statt des vorhandenen Ereignisverarbeiters '%EVENTHANDLER' den 'Wenn ich als Klon entstehe' Baustein oder den 'Wenn diese Figur angeklickt wird' Baustein.
missing_clone_initialization_delete_clone_message_multiple=Wenn du eine Figur klonst, diese Figur aber kein Skript mit 'Wenn ich als Klon entstehe' oder 'Wenn diese Figur angeklickt wird' enthält, kann der Klon nichts machen. Du verwendest einen 'lösche diesen Klon' Baustein in einem Skript der Figur %SPRITE, das mit dem Empfangen der Nachricht '%MESSAGE' beginnt. Suche in der Figur %SPRITE nach den Skripten, in denen die Nachricht '%MESSAGE' versendet wurde. Verwende in diesen Skripten statt der vorhandenen Ereignisverarbeiter '%EVENTHANDLER' den 'Wenn ich als Klon entstehe' Baustein oder den 'Wenn diese Figur angeklickt wird' Baustein.
missing_erase_all=Wenn du in Scratch zeichnest aber nie löscht, bleibt die Zechnung auch bei der nächsten Ausführung erhalten. Stelle sicher, dass du zu Beginn des Programms die alten Zeichnungen mit einem 'Lösche alles' Baustein löschst.
missing_initialization=In dieser Figur wird %VARIABLE nicht initialisiert bevor der Wert ausgelesen wird, und hat damit beim Start immer den Wert der letzten Ausführung. Initialisiere %VARIABLE, indem du zu Beginn eines passenden Skripts den gewünschten Anfangswert zuweist.
missing_loop_sensing=Wenn etwas beim Eintritt einer bestimmten Aktion passieren soll, benötigst du eine Wiederholung, damit die Überprüfung kontinuierlich stattfindet. Nutze einen Wiederholungsbaustein.
missing_loop_sensing_variable=Wenn etwas beim Eintritt eines bestimmten Variablenwertes passieren soll, benötigst du eine Wiederholung, damit die Überprüfung kontinuierlich stattfindet. Nutze einen Wiederholungsbaustein.
missing_pen_down=Du hast einen 'schalte Stift aus' Baustein verwendet, aber keinen 'schalte Stift ein'. Wenn du in Scratch etwas zeichnen willst, vergiss nicht, den 'Schalte Stift ein' Baustein zu verwenden.
missing_pen_up=Du hast einen 'schalte Stift ein' Baustein verwendet, aber keinen 'schalte Stift aus'. Das kann zu ungewollten Linien in der Zeichnung führen. Wenn du den Malstift irgendwo einschaltest, stelle sicher, dass er auch wieder ausgeschaltet wird.
missing_resource=Deinem Programm fehlt ein Bild oder ein Ton, den du benutzen willst. Wähle ein anderes Bild oder einen anderen Ton. Alternativ kannst du auch einen neuen Ton oder ein neues Bild hochladen.
missing_termination=Wird eine Wiederholung verwendet und die Abbruchbedingung vergessen, so führt das Programm die Wiederholung unendlich lang aus. Blöcke danach werden nie erreicht. Vergiss nicht, die Abbruchbedingung in deiner Wiederholung einzufügen.
missing_wait_condition=In deinem 'Warte bis' Baustein fehlt die Bedingung, auf die gewartet werden soll.
multiple_attribute_modifications=Es gibt mehrere Änderungen der gleichen Variable oder des gleichen Attributs hintereinander, die zusammengefasst werden könnten.
nested_loops=Verschachtle keine Wiederholungen ineinander, denn das kann zu unerwarteten Problemen führen.  Versuche nicht notwendige Wiederholungen wegzulassen.
no_working_scripts=Deine Figur enthält nur lose Blöcke und Ereignisbausteine. Verbinde den Ereignisbaustein mit deinem restlichen Blöcken damit die Figur auf die Ereignisse reagieren kann.
orphaned_parameter=Wenn du bei deinem eigenen Block ein Eingabefeld nachträglich löschst, stelle sicher, dass du alle Verwendungen des Eingabefeldes auch löschst.
parameter_out_of_scope=Den Wert eines Eingabefelds kannst du lediglich innerhalb eines eigenen Blocks verwenden.
position_equals_check=Die Position einer Figur in Scratch beschreibt ihren Mittelpunkt. Es ist sehr unwahrscheinlich, dass die %COORDINATE Koordinate eines Objekts den genauen Wert des Vergleichs annimt. Benutze stattdessen eine passende Näherung mit '<' bzw. '>'.
position_equals_check_dist=Die Position einer Figur in Scratch beschreibt ihren Mittelpunkt. Es ist sehr unwahrscheinlich, dass die Entfernung zweier Objekte den genauen Wert des Vergleichs annimt. Benutze stattdessen eine passende Näherung mit '<' bzw. '>'.
position_equals_check_zero_sprites=Die Entfernung zweier Figuren wird in Scratch von Mittelpunkt zu Mittelpunkt gemessen. Es ist sehr unwahrscheinlich, dass die Mittelpunkte zweier Figuren jemals exakt übereinander liegen. Entferne das '=' und benutze stattdessen eine passende Näherung mit '<' oder verwende einen eckigen Baustein 'wird ... berührt?' aus dem Bereich Fühlen.
position_equals_check_zero_mouse=Die Entfernung einer Figur zum Mauszeiger in Scratch von Mittelpunkt zu Mittelpunkt gemessen. Es ist sehr unwahrscheinlich, dass die Mittelpunkte beider Objekte jemals exakt übereinander liegen. Entferne das '=' und benutze stattdessen eine passende Näherung mit '<' oder verwende einen eckigen Baustein 'wird ... berührt?' aus dem Bereich Fühlen.
recursive_cloning=Ein Klon sollte keine weiteren Klone von sich selbst erzeugen, da sonst im schlimmsten Fall unendlich viele Klone entstehen.
same_variable_different_sprite=Die gleiche Variablenname wird in mehreren Figuren verwendet. Das kann Verwirrung erzeugen. Stelle sicher eindeutige Namen zu verwenden.
sequential_actions=Das Programm enthält wiederholt eine Sequenz gleicher Anweisungen. Man könnte das Programm mit einer Wiederholung vereinfachen.
sprite_naming=Die Figur %SPRITE hat keinen aussagekräftigen Namen. Du verwendest den Standardnamen oder den Namen einer anderen Figur gefolgt von einer Zahl. Dadurch wird dein Programm schwerer zu verstehen. Gib deinen Figuren aussagekräftige, eindeutige Namen.
stuttering_movement=Das Verwenden des 'Wenn Taste gedrückt' Ereignisverarbeiters kann zu stotternden Bewegungen führen. Überprüfe auf eine gedrückte Taste besser innerhalb einer Endloswiederholung mit 'falls 'Taste %KEY gedrückt?', dann' anstatt mit dem Ereignisverarbeiter.
terminated_loop=Die Wiederholung wird unterbrochen (z.B. durch einen Stop Baustein) und wird garnicht wiederholt.
type_error=Du vergleichst Werte, die nicht vergleichbar sind.
type_error_weird_distance=Du benutzt einen Baustein in 'Entfernung von' zu dem du keine Entfernung messen kannst. Verwende einen Figurnamen oder die Mauszeiger Option aus den vorgegebenen Möglichkeiten des 'Entfernung zu' Bausteins.
unused_custom_block=Du hast einen eigenen Block erstellt, den du nirgends verwendest. Das macht das Programm unübersichtlich. Du kannst den eigenen Block löschen.
unused_parameter=Du hast einen Parameter angelegt, den du nicht im eigenen Block verwendest. Das macht den eignen Block den unübersichtlich. Du kannst den Parameter löschen.
unused_variables=Du hast eine Variable definiert, die du an keiner Stelle deines Programms nutzt. Das macht das Programm unübersichtlich. Du kannst die Variable löschen.
variable_initialization_race=Die gleiche Variable wird beim gleichen Ereignis an verschiedenen Stellen initialisiert. Wenn Scratch die Reihenfolge der Skripts ändert, kann sich das Ergebnis ändern. Versuche nur an einer Stelle die Werte zuzuweisen.
variable_as_literal=Du hast den Namen einer Variable als Text verwendet. Wolltest Du eigentlich den Variablen Baustein '%VARIABLE' verwenden?
